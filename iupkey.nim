# IUP-Nim Runtime Library Key Definitions
# Based on Andreas Rumpf's original hand translation, modernized and upgraded to v3.25

# *****************************************************************************
#  Copyright (C) 1994-2018 Tecgraf/PUC-Rio.
#
#  Permission is hereby granted, free of charge, to any person obtaining
#  a copy of this software and associated documentation files (the
#  "Software"), to deal in the Software without restriction, including
#  without limitation the rights to use, copy, modify, merge, publish,
#  distribute, sublicense, and/or sell copies of the Software, and to
#  permit persons to whom the Software is furnished to do so, subject to
#  the following conditions:
#
#  The above copyright notice and this permission notice shall be
#  included in all copies or substantial portions of the Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
#  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
#  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
#  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
#  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
#  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
# ****************************************************************************

#  from 32 to 126, all character sets are equal,
#  the key code is the same as the ASCii character code.

const
  K_SP* = cint(ord(' '))
  K_exclam* = cint(ord('!'))
  K_quotedbl* = cint(ord('\"'))
  K_numbersign* = cint(ord('#'))
  K_dollar* = cint(ord('$'))
  K_percent* = cint(ord('%'))
  K_ampersand* = cint(ord('&'))
  K_apostrophe* = cint(ord('\''))
  K_parentleft* = cint(ord('('))
  K_parentright* = cint(ord(')'))
  K_asterisk* = cint(ord('*'))
  K_plus* = cint(ord('+'))
  K_comma* = cint(ord(','))
  K_minus* = cint(ord('-'))
  K_period* = cint(ord('.'))
  K_slash* = cint(ord('/'))
  K_0* = cint(ord('0'))
  K_1* = cint(ord('1'))
  K_2* = cint(ord('2'))
  K_3* = cint(ord('3'))
  K_4* = cint(ord('4'))
  K_5* = cint(ord('5'))
  K_6* = cint(ord('6'))
  K_7* = cint(ord('7'))
  K_8* = cint(ord('8'))
  K_9* = cint(ord('9'))
  K_colon* = cint(ord(':'))
  K_semicolon* = cint(ord(';'))
  K_less* = cint(ord('<'))
  K_equal* = cint(ord('='))
  K_greater* = cint(ord('>'))
  K_question* = cint(ord('?'))
  K_at* = cint(ord('@'))
  K_upperA* = cint(ord('A'))
  K_upperB* = cint(ord('B'))
  K_upperC* = cint(ord('C'))
  K_upperD* = cint(ord('D'))
  K_upperE* = cint(ord('E'))
  K_upperF* = cint(ord('F'))
  K_upperG* = cint(ord('G'))
  K_upperH* = cint(ord('H'))
  K_upperI* = cint(ord('I'))
  K_upperJ* = cint(ord('J'))
  K_upperK* = cint(ord('K'))
  K_upperL* = cint(ord('L'))
  K_upperM* = cint(ord('M'))
  K_upperN* = cint(ord('N'))
  K_upperO* = cint(ord('O'))
  K_upperP* = cint(ord('P'))
  K_upperQ* = cint(ord('Q'))
  K_upperR* = cint(ord('R'))
  K_upperS* = cint(ord('S'))
  K_upperT* = cint(ord('T'))
  K_upperU* = cint(ord('U'))
  K_upperV* = cint(ord('V'))
  K_upperW* = cint(ord('W'))
  K_upperX* = cint(ord('X'))
  K_upperY* = cint(ord('Y'))
  K_upperZ* = cint(ord('Z'))
  K_bracketleft* = cint(ord('['))
  K_backslash* = cint(ord('\\'))
  K_bracketright* = cint(ord(']'))
  K_circum* = cint(ord('^'))
  K_underscore* = cint(ord('_'))
  K_grave* = cint(ord('`'))
  K_lowera* = cint(ord('a'))
  K_lowerb* = cint(ord('b'))
  K_lowerc* = cint(ord('c'))
  K_lowerd* = cint(ord('d'))
  K_lowere* = cint(ord('e'))
  K_lowerf* = cint(ord('f'))
  K_lowerg* = cint(ord('g'))
  K_lowerh* = cint(ord('h'))
  K_loweri* = cint(ord('i'))
  K_lowerj* = cint(ord('j'))
  K_lowerk* = cint(ord('k'))
  K_lowerl* = cint(ord('l'))
  K_lowerm* = cint(ord('m'))
  K_lowern* = cint(ord('n'))
  K_lowero* = cint(ord('o'))
  K_lowerp* = cint(ord('p'))
  K_lowerq* = cint(ord('q'))
  K_lowerr* = cint(ord('r'))
  K_lowers* = cint(ord('s'))
  K_lowert* = cint(ord('t'))
  K_loweru* = cint(ord('u'))
  K_lowerv* = cint(ord('v'))
  K_lowerw* = cint(ord('w'))
  K_lowerx* = cint(ord('x'))
  K_lowery* = cint(ord('y'))
  K_lowerz* = cint(ord('z'))
  K_braceleft* = cint(ord('{'))
  K_bar* = cint(ord('|'))
  K_braceright* = cint(ord('}'))
  K_tilde* = cint(ord('~'))

#  Printable ASCii keys

template isPrint*(c: cint): bool =
  return c > 31 and c < 127

#  also define the escape sequences that have keys associated

const
  K_BS* = cint(ord('\b'))
  K_TAB* = cint(ord('\t'))
  K_LF* = cint(10)
  K_CR* = cint(13)

#  IUP Extended Key Codes, range start at 128

proc isXkey*(c: cint): bool =
  return c >= 128

proc isShiftXkey*(c: cint): bool =
  return c > 256 and c < 512

proc isCtrlXkey*(c: cint): bool =
  return c > 512 and c < 768

proc isAltXkey*(c: cint): bool =
  return c > 768 and c < 1024

proc isSysXkey*(c: cint): bool =
  return c > 1024 and c < 1280

proc XkeyBase*(c: cint): cint =
  return (c and 0x0FFFFFFF)

proc XkeyShift*(c: cint): cint =
  return (c or 0x10000000)           #  Shift

proc XkeyCtrl*(c: cint): cint =
  return (c or 0x20000000)           #  Ctrl

proc XkeyAlt*(c: cint): cint =
  return (c or 0x40000000)           #  Alt

proc XkeySys*(c: cint): clonglong =
  return (c or 0x80000000)           #  Sys (Win or Apple)

const
  K_quoteleft* = K_grave
  K_quoteright* = K_apostrophe

#  These use the same definition as X11 and GDK.
#  This also means that any X11 or GDK definition can also be used.

const
  K_PAUSE* = cint(0x0000FF13)
  K_ESC* = cint(0x0000FF1B)
  K_HOME* = cint(0x0000FF50)
  K_LEFT* = cint(0x0000FF51)
  K_UP* = cint(0x0000FF52)
  K_RIGHT* = cint(0x0000FF53)
  K_DOWN* = cint(0x0000FF54)
  K_PGUP* = cint(0x0000FF55)
  K_PGDN* = cint(0x0000FF56)
  K_END* = cint(0x0000FF57)
  K_MIDDLE* = cint(0x0000FF0B)
  K_Print* = cint(0x0000FF61)
  K_INS* = cint(0x0000FF63)
  K_Menu* = cint(0x0000FF67)
  K_DEL* = cint(0x0000FFFF)
  K_F1* = cint(0x0000FFBE)
  K_F2* = cint(0x0000FFBF)
  K_F3* = cint(0x0000FFC0)
  K_F4* = cint(0x0000FFC1)
  K_F5* = cint(0x0000FFC2)
  K_F6* = cint(0x0000FFC3)
  K_F7* = cint(0x0000FFC4)
  K_F8* = cint(0x0000FFC5)
  K_F9* = cint(0x0000FFC6)
  K_F10* = cint(0x0000FFC7)
  K_F11* = cint(0x0000FFC8)
  K_F12* = cint(0x0000FFC9)

#  no Shift/Ctrl/Alt

const
  K_LSHIFT* = cint(0x0000FFE1)
  K_RSHIFT* = cint(0x0000FFE2)
  K_LCTRL* = cint(0x0000FFE3)
  K_RCTRL* = cint(0x0000FFE4)
  K_LALT* = cint(0x0000FFE9)
  K_RALT* = cint(0x0000FFEA)
  K_NUM* = cint(0x0000FF7F)
  K_SCROLL* = cint(0x0000FF14)
  K_CAPS* = cint(0x0000FFE5)

#  Also, these are the same as the Latin-1 definition

const
  K_lowerccedilla* = cint(0x000000E7)
  K_upperCcedilla* = cint(0x000000C7)
  K_acute* = cint(0x000000B4)
  K_diaeresis* = cint(0x000000A8)

# ****************************************************
#  Modifiers use last 4 bits. Since IUP 3.9
#  These modifiers definitions are specific to IUP
# ****************************************************

#  These definitions are here for backward compatibility
#  and to simplify some key combination usage.
#  But since IUP 3.9, modifiers can be combined with any key
#  and they can be mixed together.

const
  K_sHOME* = XkeyShift(K_HOME)
  K_sUP* = XkeyShift(K_UP)
  K_sPGUP* = XkeyShift(K_PGUP)
  K_sLEFT* = XkeyShift(K_LEFT)
  K_sMIDDLE* = XkeyShift(K_MIDDLE)
  K_sRIGHT* = XkeyShift(K_RIGHT)
  K_sEND* = XkeyShift(K_END)
  K_sDOWN* = XkeyShift(K_DOWN)
  K_sPGDN* = XkeyShift(K_PGDN)
  K_sINS* = XkeyShift(K_INS)
  K_sDEL* = XkeyShift(K_DEL)
  K_sSP* = XkeyShift(K_SP)
  K_sTAB* = XkeyShift(K_TAB)
  K_sCR* = XkeyShift(K_CR)
  K_sBS* = XkeyShift(K_BS)
  K_sPAUSE* = XkeyShift(K_PAUSE)
  K_sESC* = XkeyShift(K_ESC)
  K_sF1* = XkeyShift(K_F1)
  K_sF2* = XkeyShift(K_F2)
  K_sF3* = XkeyShift(K_F3)
  K_sF4* = XkeyShift(K_F4)
  K_sF5* = XkeyShift(K_F5)
  K_sF6* = XkeyShift(K_F6)
  K_sF7* = XkeyShift(K_F7)
  K_sF8* = XkeyShift(K_F8)
  K_sF9* = XkeyShift(K_F9)
  K_sF10* = XkeyShift(K_F10)
  K_sF11* = XkeyShift(K_F11)
  K_sF12* = XkeyShift(K_F12)
  K_sPrint* = XkeyShift(K_Print)
  K_sMenu* = XkeyShift(K_Menu)
  K_cHOME* = XkeyCtrl(K_HOME)
  K_cUP* = XkeyCtrl(K_UP)
  K_cPGUP* = XkeyCtrl(K_PGUP)
  K_cLEFT* = XkeyCtrl(K_LEFT)
  K_cMIDDLE* = XkeyCtrl(K_MIDDLE)
  K_cRIGHT* = XkeyCtrl(K_RIGHT)
  K_cEND* = XkeyCtrl(K_END)
  K_cDOWN* = XkeyCtrl(K_DOWN)
  K_cPGDN* = XkeyCtrl(K_PGDN)
  K_cINS* = XkeyCtrl(K_INS)
  K_cDEL* = XkeyCtrl(K_DEL)
  K_cSP* = XkeyCtrl(K_SP)
  K_cTAB* = XkeyCtrl(K_TAB)
  K_cCR* = XkeyCtrl(K_CR)
  K_cBS* = XkeyCtrl(K_BS)
  K_cPAUSE* = XkeyCtrl(K_PAUSE)
  K_cESC* = XkeyCtrl(K_ESC)
  K_cupperCcedilla* = XkeyCtrl(K_upperCcedilla)
  K_cF1* = XkeyCtrl(K_F1)
  K_cF2* = XkeyCtrl(K_F2)
  K_cF3* = XkeyCtrl(K_F3)
  K_cF4* = XkeyCtrl(K_F4)
  K_cF5* = XkeyCtrl(K_F5)
  K_cF6* = XkeyCtrl(K_F6)
  K_cF7* = XkeyCtrl(K_F7)
  K_cF8* = XkeyCtrl(K_F8)
  K_cF9* = XkeyCtrl(K_F9)
  K_cF10* = XkeyCtrl(K_F10)
  K_cF11* = XkeyCtrl(K_F11)
  K_cF12* = XkeyCtrl(K_F12)
  K_cPrint* = XkeyCtrl(K_Print)
  K_cMenu* = XkeyCtrl(K_Menu)
  K_mHOME* = XkeyAlt(K_HOME)
  K_mUP* = XkeyAlt(K_UP)
  K_mPGUP* = XkeyAlt(K_PGUP)
  K_mLEFT* = XkeyAlt(K_LEFT)
  K_mMIDDLE* = XkeyAlt(K_MIDDLE)
  K_mRIGHT* = XkeyAlt(K_RIGHT)
  K_mEND* = XkeyAlt(K_END)
  K_mDOWN* = XkeyAlt(K_DOWN)
  K_mPGDN* = XkeyAlt(K_PGDN)
  K_mINS* = XkeyAlt(K_INS)
  K_mDEL* = XkeyAlt(K_DEL)
  K_mSP* = XkeyAlt(K_SP)
  K_mTAB* = XkeyAlt(K_TAB)
  K_mCR* = XkeyAlt(K_CR)
  K_mBS* = XkeyAlt(K_BS)
  K_mPAUSE* = XkeyAlt(K_PAUSE)
  K_mESC* = XkeyAlt(K_ESC)
  K_mupperCcedilla* = XkeyAlt(K_upperCcedilla)
  K_mF1* = XkeyAlt(K_F1)
  K_mF2* = XkeyAlt(K_F2)
  K_mF3* = XkeyAlt(K_F3)
  K_mF4* = XkeyAlt(K_F4)
  K_mF5* = XkeyAlt(K_F5)
  K_mF6* = XkeyAlt(K_F6)
  K_mF7* = XkeyAlt(K_F7)
  K_mF8* = XkeyAlt(K_F8)
  K_mF9* = XkeyAlt(K_F9)
  K_mF10* = XkeyAlt(K_F10)
  K_mF11* = XkeyAlt(K_F11)
  K_mF12* = XkeyAlt(K_F12)
  K_mPrint* = XkeyAlt(K_Print)
  K_mMenu* = XkeyAlt(K_Menu)
  K_yHOME* = XkeySys(K_HOME)
  K_yUP* = XkeySys(K_UP)
  K_yPGUP* = XkeySys(K_PGUP)
  K_yLEFT* = XkeySys(K_LEFT)
  K_yMIDDLE* = XkeySys(K_MIDDLE)
  K_yRIGHT* = XkeySys(K_RIGHT)
  K_yEND* = XkeySys(K_END)
  K_yDOWN* = XkeySys(K_DOWN)
  K_yPGDN* = XkeySys(K_PGDN)
  K_yINS* = XkeySys(K_INS)
  K_yDEL* = XkeySys(K_DEL)
  K_ySP* = XkeySys(K_SP)
  K_yTAB* = XkeySys(K_TAB)
  K_yCR* = XkeySys(K_CR)
  K_yBS* = XkeySys(K_BS)
  K_yPAUSE* = XkeySys(K_PAUSE)
  K_yESC* = XkeySys(K_ESC)
  K_yupperCcedilla* = XkeySys(K_upperCcedilla)
  K_yF1* = XkeySys(K_F1)
  K_yF2* = XkeySys(K_F2)
  K_yF3* = XkeySys(K_F3)
  K_yF4* = XkeySys(K_F4)
  K_yF5* = XkeySys(K_F5)
  K_yF6* = XkeySys(K_F6)
  K_yF7* = XkeySys(K_F7)
  K_yF8* = XkeySys(K_F8)
  K_yF9* = XkeySys(K_F9)
  K_yF10* = XkeySys(K_F10)
  K_yF11* = XkeySys(K_F11)
  K_yF12* = XkeySys(K_F12)
  K_yPrint* = XkeySys(K_Print)
  K_yMenu* = XkeySys(K_Menu)
  K_sPlus* = XkeyShift(K_plus)
  K_sComma* = XkeyShift(K_comma)
  K_sMinus* = XkeyShift(K_minus)
  K_sPeriod* = XkeyShift(K_period)
  K_sSlash* = XkeyShift(K_slash)
  K_sAsterisk* = XkeyShift(K_asterisk)
  K_cupperA* = XkeyCtrl(K_upperA)
  K_cupperB* = XkeyCtrl(K_upperB)
  K_cupperC* = XkeyCtrl(K_upperC)
  K_cupperD* = XkeyCtrl(K_upperD)
  K_cupperE* = XkeyCtrl(K_upperE)
  K_cupperF* = XkeyCtrl(K_upperF)
  K_cupperG* = XkeyCtrl(K_upperG)
  K_cupperH* = XkeyCtrl(K_upperH)
  K_cupperI* = XkeyCtrl(K_upperI)
  K_cupperJ* = XkeyCtrl(K_upperJ)
  K_cupperK* = XkeyCtrl(K_upperK)
  K_cupperL* = XkeyCtrl(K_upperL)
  K_cupperM* = XkeyCtrl(K_upperM)
  K_cupperN* = XkeyCtrl(K_upperN)
  K_cupperO* = XkeyCtrl(K_upperO)
  K_cupperP* = XkeyCtrl(K_upperP)
  K_cupperQ* = XkeyCtrl(K_upperQ)
  K_cupperR* = XkeyCtrl(K_upperR)
  K_cupperS* = XkeyCtrl(K_upperS)
  K_cupperT* = XkeyCtrl(K_upperT)
  K_cupperU* = XkeyCtrl(K_upperU)
  K_cupperV* = XkeyCtrl(K_upperV)
  K_cupperW* = XkeyCtrl(K_upperW)
  K_cupperX* = XkeyCtrl(K_upperX)
  K_cupperY* = XkeyCtrl(K_upperY)
  K_cupperZ* = XkeyCtrl(K_upperZ)
  K_c1* = XkeyCtrl(K_1)
  K_c2* = XkeyCtrl(K_2)
  K_c3* = XkeyCtrl(K_3)
  K_c4* = XkeyCtrl(K_4)
  K_c5* = XkeyCtrl(K_5)
  K_c6* = XkeyCtrl(K_6)
  K_c7* = XkeyCtrl(K_7)
  K_c8* = XkeyCtrl(K_8)
  K_c9* = XkeyCtrl(K_9)
  K_c0* = XkeyCtrl(K_0)
  K_cPlus* = XkeyCtrl(K_plus)
  K_cComma* = XkeyCtrl(K_comma)
  K_cMinus* = XkeyCtrl(K_minus)
  K_cPeriod* = XkeyCtrl(K_period)
  K_cSlash* = XkeyCtrl(K_slash)
  K_cSemicolon* = XkeyCtrl(K_semicolon)
  K_cEqual* = XkeyCtrl(K_equal)
  K_cBracketleft* = XkeyCtrl(K_bracketleft)
  K_cBracketright* = XkeyCtrl(K_bracketright)
  K_cBackslash* = XkeyCtrl(K_backslash)
  K_cAsterisk* = XkeyCtrl(K_asterisk)
  K_mupperA* = XkeyAlt(K_upperA)
  K_mupperB* = XkeyAlt(K_upperB)
  K_mupperC* = XkeyAlt(K_upperC)
  K_mupperD* = XkeyAlt(K_upperD)
  K_mupperE* = XkeyAlt(K_upperE)
  K_mupperF* = XkeyAlt(K_upperF)
  K_mupperG* = XkeyAlt(K_upperG)
  K_mupperH* = XkeyAlt(K_upperH)
  K_mupperI* = XkeyAlt(K_upperI)
  K_mupperJ* = XkeyAlt(K_upperJ)
  K_mupperK* = XkeyAlt(K_upperK)
  K_mupperL* = XkeyAlt(K_upperL)
  K_mupperM* = XkeyAlt(K_upperM)
  K_mupperN* = XkeyAlt(K_upperN)
  K_mupperO* = XkeyAlt(K_upperO)
  K_mupperP* = XkeyAlt(K_upperP)
  K_mupperQ* = XkeyAlt(K_upperQ)
  K_mupperR* = XkeyAlt(K_upperR)
  K_mupperS* = XkeyAlt(K_upperS)
  K_mupperT* = XkeyAlt(K_upperT)
  K_mupperU* = XkeyAlt(K_upperU)
  K_mupperV* = XkeyAlt(K_upperV)
  K_mupperW* = XkeyAlt(K_upperW)
  K_mupperX* = XkeyAlt(K_upperX)
  K_mupperY* = XkeyAlt(K_upperY)
  K_mupperZ* = XkeyAlt(K_upperZ)
  K_m1* = XkeyAlt(K_1)
  K_m2* = XkeyAlt(K_2)
  K_m3* = XkeyAlt(K_3)
  K_m4* = XkeyAlt(K_4)
  K_m5* = XkeyAlt(K_5)
  K_m6* = XkeyAlt(K_6)
  K_m7* = XkeyAlt(K_7)
  K_m8* = XkeyAlt(K_8)
  K_m9* = XkeyAlt(K_9)
  K_m0* = XkeyAlt(K_0)
  K_mPlus* = XkeyAlt(K_plus)
  K_mComma* = XkeyAlt(K_comma)
  K_mMinus* = XkeyAlt(K_minus)
  K_mPeriod* = XkeyAlt(K_period)
  K_mSlash* = XkeyAlt(K_slash)
  K_mSemicolon* = XkeyAlt(K_semicolon)
  K_mEqual* = XkeyAlt(K_equal)
  K_mBracketleft* = XkeyAlt(K_bracketleft)
  K_mBracketright* = XkeyAlt(K_bracketright)
  K_mBackslash* = XkeyAlt(K_backslash)
  K_mAsterisk* = XkeyAlt(K_asterisk)
  K_yupperA* = XkeySys(K_upperA)
  K_yupperB* = XkeySys(K_upperB)
  K_yupperC* = XkeySys(K_upperC)
  K_yupperD* = XkeySys(K_upperD)
  K_yupperE* = XkeySys(K_upperE)
  K_yupperF* = XkeySys(K_upperF)
  K_yupperG* = XkeySys(K_upperG)
  K_yupperH* = XkeySys(K_upperH)
  K_yupperI* = XkeySys(K_upperI)
  K_yupperJ* = XkeySys(K_upperJ)
  K_yupperK* = XkeySys(K_upperK)
  K_yupperL* = XkeySys(K_upperL)
  K_yupperM* = XkeySys(K_upperM)
  K_yupperN* = XkeySys(K_upperN)
  K_yupperO* = XkeySys(K_upperO)
  K_yupperP* = XkeySys(K_upperP)
  K_yupperQ* = XkeySys(K_upperQ)
  K_yupperR* = XkeySys(K_upperR)
  K_yupperS* = XkeySys(K_upperS)
  K_yupperT* = XkeySys(K_upperT)
  K_yupperU* = XkeySys(K_upperU)
  K_yupperV* = XkeySys(K_upperV)
  K_yupperW* = XkeySys(K_upperW)
  K_yupperX* = XkeySys(K_upperX)
  K_yupperY* = XkeySys(K_upperY)
  K_yupperZ* = XkeySys(K_upperZ)
  K_y1* = XkeySys(K_1)
  K_y2* = XkeySys(K_2)
  K_y3* = XkeySys(K_3)
  K_y4* = XkeySys(K_4)
  K_y5* = XkeySys(K_5)
  K_y6* = XkeySys(K_6)
  K_y7* = XkeySys(K_7)
  K_y8* = XkeySys(K_8)
  K_y9* = XkeySys(K_9)
  K_y0* = XkeySys(K_0)
  K_yPlus* = XkeySys(K_plus)
  K_yComma* = XkeySys(K_comma)
  K_yMinus* = XkeySys(K_minus)
  K_yPeriod* = XkeySys(K_period)
  K_ySlash* = XkeySys(K_slash)
  K_ySemicolon* = XkeySys(K_semicolon)
  K_yEqual* = XkeySys(K_equal)
  K_yBracketleft* = XkeySys(K_bracketleft)
  K_yBracketright* = XkeySys(K_bracketright)
  K_yBackslash* = XkeySys(K_backslash)
  K_yAsterisk* = XkeySys(K_asterisk)
